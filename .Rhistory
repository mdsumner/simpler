col <- grey(seq(0, 0.8, length = 20))[scl(a) * (length(a) - 1) + 1]
devtools::load_all(".")
set.seed(7)
lin <- cbind(1:10, rnorm(10))
tri <- assoc_triangle(lin)
a <- tri_area(lin[t(tri), ])
plot(lin)
scl <- function(x) (x - min(x))/diff(range(x))
col <- grey(seq(0, 0.8, length = 20))[scl(a) * (length(a) - 1) + 1]
for (i in seq_len(nrow(tri))) polypath(lin[tri[i, ], ], col = col)
for (i in seq_len(nrow(tri))) polypath(lin[tri[i, ], ], col = col[i])
plot(lin)
scl <- function(x) (x - min(x))/diff(range(x))
col <- grey(seq(0.2, 0.8, length = 20))[scl(a) * (length(a) - 1) + 1]
for (i in seq_len(nrow(tri))) polypath(lin[tri[i, ], ], col = col[i])
plot(lin)
scl <- function(x) (x - min(x))/diff(range(x))
col <- grey(seq(0.2, 0.8, length = 20), alpha = 0.5)[scl(a) * (length(a) - 1) + 1]
## smaller triangles are darker, get removed first
for (i in seq_len(nrow(tri))) polypath(lin[tri[i, ], ], col = col[i])
plot(lin)
scl <- function(x) (x - min(x))/diff(range(x))
col <- grey(seq(0.2, 0.8, length = 20), alpha = 0.8)[scl(a) * (length(a) - 1) + 1]
## smaller triangles are darker, get removed first
for (i in seq_len(nrow(tri))) polypath(lin[tri[i, ], ], col = col[i])
lin <- cbind(1:10, sort(rnorm(10)))
tri <- assoc_triangle(lin)
a <- tri_area(lin[t(tri), ])
plot(lin)
scl <- function(x) (x - min(x))/diff(range(x))
col <- grey(seq(0.2, 0.8, length = 20), alpha = 0.8)[scl(a) * (length(a) - 1) + 1]
## smaller triangles are darker, get removed first
for (i in seq_len(nrow(tri))) polypath(lin[tri[i, ], ], col = col[i])
plot(lin)
scl <- function(x) (x - min(x))/diff(range(x))
col <- grey(seq(0.2, 0.8, length = 20), alpha = 0.8)[scl(a) * (19) + 1]
## smaller triangles are darker, get removed first
for (i in seq_len(nrow(tri))) polypath(lin[tri[i, ], ], col = col[i])
usethis::use_readme_rmd()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(silicate)
x <- ARC(inlandwaters)
get_pts <- function(x, i) {
x$arc_link_vertex %>% dplyr::filter(arc_ == x$object_link_arc$arc_[i]) %>%
dplyr::inner_join() %>% dplyr::select(x_, y_)
}
plot(x)
plot(x)
plot(x$vertex$x_, x$vertex$y_, pch = ".", asp = 1)
abline(v = 5e5)
plot(x$vertex$x_, x$vertex$y_, pch = ".", asp = 1, xlim = c(4e5, 1e7), ylim = c(-1e6, 0))
plot(x$vertex$x_, x$vertex$y_, pch = ".", asp = 1, xlim = c(4e5, 2e6), ylim = c(-1e6, 0))
